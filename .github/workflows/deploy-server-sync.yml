name: Deploy to Server (File Sync)

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  deploy:
    name: Build and Deploy to Production Server
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: latest

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build project
        run: pnpm build

      - name: Sync files to server
        uses: burnett01/rsync-deployments@7.0.1
        with:
          switches: -avzr --delete --exclude='.git' --exclude='node_modules' --exclude='.github'
          path: ./
          remote_path: /home/administrator/apps/
          remote_host: ${{ secrets.SERVER_HOST }}
          remote_user: ${{ secrets.SERVER_USERNAME }}
          remote_key: ${{ secrets.SERVER_SSH_KEY }}

      - name: Install dependencies and restart PM2 on server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          script: |
            # Navigate to the project directory
            cd /home/administrator/apps/icpies

            # Install dependencies
            pnpm install --frozen-lockfile

            # Stop existing PM2 process if running
            pm2 stop icpies || true

            # Start the application with PM2
            pm2 start ecosystem.config.cjs

            # Save PM2 configuration
            pm2 save

            # Show status
            pm2 status

      - name: Deployment Status
        run: echo "ðŸš€ Deployment completed successfully!"
