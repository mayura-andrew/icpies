---
import type { ButtonProps } from "@/components/primitives/Button.astro";
import Container from "@/components/primitives/Container.astro";
import Link from "@/components/primitives/Link.astro";
import Blob from "@/components/sections/Blob.astro";
import Countdown from "@/components/primitives/Countdown.astro";
import icpies from "@/assets/icpies.svg";
import { Image } from "astro:assets";

interface Props {
  headline?: string;
  title: string;
  subtitle: string;
  buttons?: ButtonProps[];
  eventDate?: string;
  venue?: string;
  format?: string;
  imageSrc?: string;
}

const defaultButtons: ButtonProps[] = [
  {
    title: "Register Now",
    href: "/register",
    style: "button",
    icon: "iconamoon:arrow-top-right-1-thin",
  },
];

const defaultEventDate = "2025-08-28T09:00:00";
const {
  headline = '2<span class="superscript-text">nd</span> International Conference on Plastics, Innovations and Environmental Sustainability (ICPIES) 2025',
  title,
  subtitle,
  buttons = defaultButtons,
  eventDate = defaultEventDate,
  venue = "Colombo, Sri Lanka",
  format = "Hybrid Conference",
  imageSrc = "",
} = Astro.props;
---

<div
  id="hero"
  class="text-sm font-medium pb-12 md:pb-16 lg:pb-24 pt-16 md:pt-18 lg:pt-24 relative min-h-[60vh] md:min-h-[70vh] lg:min-h-[85vh] bg-[#F7F7F7] overflow-hidden"
>
  <!-- Background gradient blobs with reduced opacity - optimized for mobile -->
  <div class="absolute inset-0 z-0 opacity-30">
    <div
      class="bg-animation-blob bg-[#4ECDC4] absolute top-[5%] md:top-[10%] right-[5%] md:right-[10%] w-32 md:w-48 lg:w-64 h-32 md:h-48 lg:h-64 rounded-full mix-blend-multiply filter blur-3xl animate-blob"
    >
    </div>
    <div
      class="bg-animation-blob bg-[#1A7A64] absolute top-[15%] md:top-[20%] left-[10%] md:left-[20%] w-36 md:w-48 lg:w-72 h-36 md:h-48 lg:h-72 rounded-full mix-blend-multiply filter blur-3xl animate-blob animation-delay-2000"
    >
    </div>
    <div
      class="bg-animation-blob bg-[#0D3B66] absolute bottom-[10%] md:bottom-[15%] left-[15%] md:left-[30%] w-40 md:w-60 lg:w-80 h-40 md:h-60 lg:h-80 rounded-full mix-blend-multiply filter blur-3xl animate-blob animation-delay-4000"
    >
    </div>
    <div
      class="bg-animation-blob bg-[#FF9F1C] absolute bottom-[20%] md:bottom-[30%] right-[10%] md:right-[20%] w-28 md:w-40 lg:w-56 h-28 md:h-40 lg:h-56 rounded-full mix-blend-multiply filter blur-3xl animate-blob animation-delay-6000"
    >
    </div>
  </div>

  <!-- Hero image section with improved mobile sizing -->
  <div class="w-full relative z-10 mb-6 sm:mb-8 md:mb-12 top-0">
    <div class="hero-image-container">
      <div class="max-w-[2000px] mx-auto">
        <Image
          src={icpies}
          alt="ICPIES Conference 2025"
          class="w-full h-auto object-cover hero-image"
          widths={[400, 800, 1200]}
          sizes="(max-width: 640px) 100vw, (max-width: 1024px) 50vw, 33vw"
          loading="eager"
        />
      </div>
    </div>
  </div>

  <!-- Conference info section -->
  <Container>
    <div class="flex flex-col items-center">
      <!-- Text content below image -->
      <div class="w-full max-w-6xl mx-auto text-center px-4">


        <!-- Countdown Timer - more compact for mobile -->
        <div data-hero-reveal class="mb-6 md:mb-8 max-w-full md:max-w-xl mx-auto">
          <Countdown eventDate={eventDate} />
        </div>

        <!-- Action buttons - mobile optimized -->
        <div class="flex flex-col sm:flex-row justify-center gap-3 sm:gap-4" data-hero-reveal>
          {buttons.map((button, i) => (
            <Link
              href={button.href}
              style="button"
              icon={button.icon}
              class={i === 0
                ? "bg-[#1A7A64] hover:bg-[#16695A] text-white w-full sm:w-auto"
                : "bg-[#0D3B66] hover:bg-[#0A2F52] text-white w-full sm:w-auto"
              }
            >
              {button.title}
            </Link>
          ))}
        </div>
      </div>
    </div>
  </Container>
</div>

<style>
  @keyframes moveDown {
    0% {
      transform: translateY(0);
    }
    80% {
      transform: translateY(2px);
    }
    100% {
      transform: translateY(0);
    }
  }

  .headline {
    background: linear-gradient(90deg, #1a7a64 0%, #0d3b66 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    text-fill-color: transparent;
    margin-bottom: 1rem;
  }

  /* Superscript styling */
  .superscript-text {
    font-size: 0.5em;
    vertical-align: super;
    background: linear-gradient(90deg, #1a7a64 0%, #0d3b66 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    text-fill-color: transparent;
    font-weight: inherit;
    display: inline-block;
  }

  /* Hero image container with improved responsiveness */
  .hero-image-container {
    position: relative;
    width: 100%;
    overflow: hidden;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
    margin-top: -1rem;
    border-radius: 0;
  }

  /* Better aspect ratio handling for all devices */
  .hero-image-container::after {
    content: "";
    display: block;
    padding-bottom: 56%; /* 16:9 aspect ratio by default */
  }

  .hero-image-container img {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: contain; /* Changed to contain for SVG */
    object-position: center;
    transition: transform 0.5s ease;
  }

  /* SVG optimization - prevent scaling issues on mobile */
  @media (max-width: 640px) {
    .hero-image-container::after {
      padding-bottom: 70%; /* Taller aspect ratio on mobile */
    }

    .hero-image-container img {
      object-position: center;
      padding: 0.5rem;
    }
  }

  /* Medium devices */
  @media (min-width: 641px) and (max-width: 1024px) {
    .hero-image-container::after {
      padding-bottom: 50%; /* Medium aspect ratio on tablets */
    }

    #hero {
      padding-top: 6rem;
    }
  }

  /* Large devices */
  @media (min-width: 1025px) {
    .hero-image-container::after {
      padding-bottom: 40%; /* Wide aspect ratio on desktop */
    }
  }

  .hero-image-container::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
      to bottom,
      rgba(0, 0, 0, 0.05) 0%,
      rgba(0, 0, 0, 0) 20%,
      rgba(0, 0, 0, 0) 80%,
      rgba(0, 0, 0, 0.1) 100%
    );
    z-index: 1;
    pointer-events: none;
  }

  /* Badge hover effects */
  .venue-badge:hover,
  .format-badge:hover,
  .date-badge:hover {
    background-color: rgba(255, 255, 255, 0.9);
    transform: translateY(-2px);
  }

  .venue-badge:hover {
    box-shadow:
      0 4px 6px -1px rgba(26, 122, 100, 0.15),
      0 2px 4px -1px rgba(26, 122, 100, 0.1);
  }

  .format-badge:hover {
    box-shadow:
      0 4px 6px -1px rgba(13, 59, 102, 0.15),
      0 2px 4px -1px rgba(13, 59, 102, 0.1);
  }

  .date-badge:hover {
    box-shadow:
      0 4px 6px -1px rgba(255, 159, 28, 0.15),
      0 2px 4px -1px rgba(255, 159, 28, 0.1);
  }

  /* Background blob animations - optimized for performance */
  .bg-animation-blob {
    opacity: 0.7;
    will-change: transform;
  }

  @keyframes blob {
    0% {
      transform: translate(0px, 0px) scale(1);
    }
    33% {
      transform: translate(20px, -20px) scale(1.1);
    }
    66% {
      transform: translate(-15px, 10px) scale(0.9);
    }
    100% {
      transform: translate(0px, 0px) scale(1);
    }
  }

  .animate-blob {
    animation: blob 20s infinite alternate;
  }

  /* Animation delays */
  .animation-delay-2000 {
    animation-delay: 2s;
  }
  .animation-delay-4000 {
    animation-delay: 4s;
  }
  .animation-delay-6000 {
    animation-delay: 6s;
  }
</style>

<script>
  import { gsap } from "gsap";
  import { ScrollToPlugin } from "gsap/ScrollToPlugin";
  import { BlurPlugin } from "@/utils/gsap-blur";
  import { LifecycleManager } from "@/utils/lifecycle-manager";

  gsap.registerPlugin(ScrollToPlugin, BlurPlugin);

  const lm = new LifecycleManager();

  // Function to check if we're on a mobile device
  const isMobile = () => window.innerWidth < 768;

  lm.onElementLoaded("hero", (ctx) => {
    ctx?.add(() => {
      // Create a timeline for sequenced animations
      const tl = gsap.timeline();

      // Subtle animation for the hero image
      tl.from(".hero-image", {
        scale: isMobile() ? 1.02 : 1.05,
        opacity: 0.7,
        duration: isMobile() ? 0.8 : 1.2,
        ease: "power2.out",
      }, 0);

      // Reveal text elements with a slight delay on mobile
      tl.to("[data-hero-reveal]", {
        blur: 0,
        opacity: 1,
        stagger: isMobile() ? 0.08 : 0.12,
        duration: isMobile() ? 0.8 : 1,
        ease: "power1.out"
      }, 0.2);

      // Animate badges with a bounce effect
      tl.from(".venue-badge, .format-badge, .date-badge", {
        scale: 0.8,
        y: -10,
        opacity: 0,
        duration: 0.5,
        stagger: 0.1,
        ease: "back.out(1.7)",
      }, isMobile() ? 0.3 : 0.5);
    });
  });
</script>
